name: live-upper-build

on:
  push:
    paths:
      - ".github/workflows/live-upper-build.yml"
      - "upper/**"
  workflow_dispatch: # manual

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "${{ github.workspace }}"
      - run: pwd && ls -al
      - uses: actions/checkout@v4
      - run: go version
      - run: go env GOMODCACHE
      - run: ls $(go env GOMODCACHE) || true
      - uses: actions/setup-go@v5
        with:
          # go-version: "1.22"
          go-version-file: ./upper/go.mod
          cache-dependency-path: ./upper/go.sum
          # FYI cache quirks can be captured and reused... I had unused deps (added to show slow download speed for modules...) and so unused deps aren't pulled on the fly (go build/test) ... and then in a later build I added a step for "go mod download" but the cache was captured before I added it so until I deleted that cache it never had the unused deps, so every future "go mod download" had to get deps (only unused) ... just be aware of possible confusion... i.e. maybe when setting up new workflows and iterating on them, make sure to nuke caches afterward before putting into prod!
      - run: go env
      - run: ls $(go env GOMODCACHE) || true
      - run: go mod download -x # -x prints commands (i.e. shows what it downloads in this case)
        working-directory: ./upper
      - run: ls $(go env GOMODCACHE) || true
      - run: go version
      - run: |
          ls
          go build
          go test
          ls
          echo foo | ./upper foo the bar
          sleep 3
        working-directory: ./upper
        name: build and test
