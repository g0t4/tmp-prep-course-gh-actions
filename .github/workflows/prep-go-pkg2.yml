name: prep go pkg2

on:
  push:
    paths:
      - ".github/workflows/prep-go-pkg2.yml"
      - "upper/**"
  workflow_dispatch: # manual

# FYI go guide: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

jobs:
  # pkg2: # as of m5 upload-artifact demo
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-go@v5
  #       with:
  #         go-version-file: "upper/go.mod"
  #         cache-dependency-path: "upper/go.sum"
  #     - run: go mod download
  #       working-directory: upper
  #     - run: |
  #         go version
  #         ls # before build
  #         go build
  #         go test
  #         ls # after build => upper! (executable)
  #         echo
  #         ./upper foo the bar
  #       working-directory: upper
  #
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: upper
  #         path: upper/upper

  # pkg2: # matrix xplat build / upload artifacts
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macos-latest]
  #       # matrix benefit => run entire build and tests on each platform
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-go@v5
  #       with:
  #         go-version-file: "upper/go.mod"
  #         cache-dependency-path: "upper/go.sum"
  #     - run: go mod download
  #       working-directory: upper
  #     - run: |
  #         go version
  #         ls # before build, btw using ls so this runs on windows too
  #         go build -o "upper-${{ matrix.os }}"
  #         go test
  #         ls # after build => upper! (executable)
  #       working-directory: upper
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: "upper-${{ matrix.os }}"
  #         path: "upper/upper-${{ matrix.os }}"

  cross: # xplat cross compile script + create release instead of upload artifact
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "upper/go.mod"
          cache-dependency-path: "upper/go.sum"
      - run: go mod download
        working-directory: upper
      - run: ./build.xplat.sh
        working-directory: upper
      # - uses: actions/upload-artifact@v4
      #   with:
      #     path: ./upper/bin/upper*
      #     name: build
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          body: "Binaries for the uppper (go) command line tool"
          files: |
            upper/bin/upper-*
          #token: ${{ secrets.GITHUB_TOKEN }}
        #if: startsWith(github.ref, 'refs/tags/')
